// ================= QUERIES ================= //

@mixin custom_up($width) {
  @media (min-width: $width) {
    @content;
  }
}

@mixin xs_up() {
  @media (min-width: map-get($breakpoints, xs)) {
    @content;
  }
}

@mixin sm_up() {
  @media (min-width: map-get($breakpoints, sm)) {
    @content;
  }
}

@mixin md_up() {
  @media (min-width: map-get($breakpoints, md)) {
    @content;
  }
}

@mixin lg_up() {
  @media (min-width: map-get($breakpoints, lg)) {
    @content;
  }
}

@mixin xl_up() {
  @media (min-width: map-get($breakpoints, xl)) {
    @content;
  }
}

@mixin xl2_up() {
  @media (min-width: map-get($breakpoints, xl2)) {
    @content;
  }
}

@mixin xl3_up() {
  @media (min-width: map-get($breakpoints, xl3)) {
    @content;
  }
}

@mixin hover() {
  @media(hover: hover) {
    @content;
  }
}

@mixin link_styles() {
  &:link,
  &:hover,
  &:focus,
  &:active,
  &:visited {
    @content;
  }
}

@mixin create_d_utilities($breakpoints_map) {
  @each $size_name, $size in $breakpoints_map {
    .d-#{$size_name}-none {
      @include custom_up($size) {
        display: none;
      }
    }
    .d-#{$size_name}-block {
      @include custom_up($size) {
        display: block;
      }
    }
    .d-#{$size_name}-inline {
      @include custom_up($size) {
        display: inline;
      }
    }
    .d-#{$size_name}-inline-block {
      @include custom_up($size) {
        display: inline-block;
      }
    }
  }
}

@mixin create_limit_width_utilities($breakpoints_map) {
  @each $size_name, $size in $breakpoints_map {
    .limit-width-#{$size_name} {
      max-width: $size;
      margin: 0 auto;
    }
  }
}